Introduction to Package Manager

* There are hundreds of Linux distributions in use today, they can be categorized by the package manager they use:
For Example:
1- Red Hat and Centos, are based on .RPM, they are known as .RPM base distribution.
2- Dibian family including Ubuntu, Dibian, and Linux Mint, make use of the Dibian pacakge managers such as the DPKG and APT (A newer frontend for the DPKG system). APT-GET (The traditional frontend for the DPKG system)

* A package is a compressed archive that contains all the files that are required by a particular software to run.

* One of the reasons to use a package manager is that each Linux distribution has its own sets of tools and libraries and software and possibly different linux kernel. As a result of this, a linux program may not run the same way from one system to another. To Fix this problem, packages includes a manifest of dependencies or list of program inversions that must be satisfied for a packaged software to run correctly on a given computer.


* A package manager is a software in a linux system that provide a consistent and automated process of installing, upgrading, configuring, and removing packages from the operating system. Some of the essential functions of a package manager are:
1- Insure package integrity and authenticity by verifying their digital certificates and check sums.
2- Simplifying the entire package management process.
3- Grouping packages by function.
4- Managing dependencies to insure a package is installed with all packages that it requires.

____________________________________________________________________

.RPM (Red Hat Package Manager)

.RPM has 5 basic modes of operation, to run each mode, run rpm followed by a certain option:
1- Installing (rpm -ivh talnet.rpm)
2- Uninstalling (rpm -e talnet.rpm)
3- Upgrading (rpm -Uvh talnet.rpm)
4- Query (rpm -q talnet.rpm), all packages information are stored in rpm database found in var directory.
5- Verifying (rpm -Vf talnet.rpm)

Note: RPM Dose not resolve package dependencies on its own, that why we use higher package manager called YUM which depends on .RPM.

YUM (Yellow-dog updater modified): Can install any dependant packages to get the base package installed. It depends  on Software Repositories that either local (Installed in your laptop) or on a remote location that can be accessed through transfer protocol
such as FTP/HTTP/HTTPS. The information about the repository is saved under a configuration file saved under /etc/yum.repos.d. Under the hood yum still use rpm package manger to install packages.

Sometimes a Redhat system may not have certain packages or it only has an old version so you can make a new repo file under /etc/yum.repos.d and point it to a non official or third party repo, e.g. /etc/yum.repos.d/nginx.repo.

Sequence of steps involved while installing a package (after yum install command):
1- yum runs a transaction check, check whether the package is installed in the system or if it needs to be updated.
2- Then the transaction summary is displayed for the user to review, and ask to enter y if want to continue. (-y will skip this).
3- Now yum will download and install the necessary RPMs to the linux system.

Common YUM Commands:
- yum install: to install a package.
- yum remove: to remove a package.
- yum update: to update a command. if used without arguments, it will update all the packages installed inw the system, it will also look for new dependant packages to be installed.
- yum repolist: shows all the repos added to the system.
- yum provides <command e.g. scp>: To figure which package should be installed for a specific command to work (scp the command we want info about).


____________________________________________________________________

DPKG (Dibian Package Manager):
.DPKG has 5 basic modes of operation, to run each mode run rpm followed by a certain option:
1- Installing or Upgrade (dpkg -i talnet.deb)
2- Uninstalling (dpkg -r talnet.deb)
3- List Packages (dpkg -l talnet)
4- Status (dpkg -s talnet).
5- Verifying (dpkg -p <path to file>), this will display details about packages.

Similar to RPM, DPKG does not honor dependency when it comes to package management. Thus, we use higher level Debian package managers such as apt and apt-get. Noting that apt does not rely on apt-get neither the opposite, we will focus on apt since it is more advanced and user friendly.

Some common apt commands:
- apt update (Refresh the software repository, this command is used to download packages information from all available sources), run this command after installing the os or after installing new sources.
- apt upgrade (Used to install available upgrades of all packages on the system from the sources configured).
- apt edit-sources (update the repositories, this opens the /etc/apt/sources.list-files), or just open them using a text editor such as vi editor.

* Once the repositories have been set up, you can make use of them to run apt commands.

- apt install talnet
- apt remove talnet
- apt search talnet (used to look up a package in the repository)
- apt list | grep telnet (list all packages)